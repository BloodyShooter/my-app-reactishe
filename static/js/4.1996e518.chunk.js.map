{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","key","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","connect","state","dispatch","withAuthRedirect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCcpMC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAQM,SAAUV,EAAMU,U,iCCA1CC,EAAcC,YAAiB,KAetBC,cAAU,CAACC,KAAM,yBAAjBD,EAbQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAM,iBAAkBY,YAAa,wBAAyBC,SAAU,CAACC,IAAUX,MAEnH,6BACI,6CCgBDY,EAxBC,SAACvB,GAEb,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAYuB,IAAKvB,EAAOH,GAAIM,KAAMH,EAAOG,KAC7BN,GAAIG,EAAOH,QACjF2B,EAAmB7B,EAAMyB,YAAYK,SAASH,KAAI,SAAAjB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QACjBkB,IAAKlB,EAAQR,QAMvF,OACI,yBAAKC,UAAWC,IAAQsB,SACpB,yBAAKvB,UAAWC,IAAQ2B,cACnBP,GAEL,yBAAKrB,UAAWC,IAAQ0B,UACnBD,EACD,kBAAC,EAAD,CAAgBd,SAXR,SAACiB,GACjBhC,EAAMiC,YAAYD,EAAOE,sB,wBCOlBC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,gBAIJ,SAACa,GACpB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASL,YAAYC,SAO7BK,IAFWJ,CAGbZ","file":"static/js/4.1996e518.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1cBm1\",\"dialogsItems\":\"Dialogs_dialogsItems__pZXIz\",\"active\":\"Dialogs_active__8NsLa\",\"dialog\":\"Dialogs_dialog__rE-kp\",\"messages\":\"Dialogs_messages__SOPpl\",\"message\":\"Dialogs_message__3pjfz\"};","import classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem","import classes from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={\"newMessageBody\"} placeholder={\"Enter your message!!!\"} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddMessageForm);","import React from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name}\r\n                                                                              id={dialog.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message message={message.message}\r\n                                                                              key={message.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport {sendMessage, updateNewMessageBody} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}